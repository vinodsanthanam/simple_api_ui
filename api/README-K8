kc apply -f deployment.yaml
kc apply -f service.yaml
or
kubectl port-forward deployment/api-deployment 80:8080
kc expose deployment api-deployment --type=LoadBalancer

istio pods
kc get pods -n istio-system

Build docker image in minikube docker registry
------------------------
eval $(minikube docker-env)

inject istio proxy container in the pod
------------------------
kubectl apply -f <(istioctl kube-inject -f deployment.yaml)

get istio ingress ip
------------------------
kubectl get pod -l app=istio-ingressgateway -n istio-system -o 'jsonpath={.items[0].status.hostIP}'

ingress port
------------------------
kubectl get svc istio-ingressgateway -n istio-system -o 'jsonpath={.spec.ports[0].nodePort}'

istio config dump
------------------------
(kubectl exec -n istio-system istio-ingressgateway-7f4dd7d699-tdkfl -- curl localhost:15000/config_dump) | more

view istio system logs
------------------------
kubectl -n istio-system logs $(kubectl -n istio-system get pod -l app=telemetry -o jsonpath='{.items[0].metadata.name}') -c mixer

Troubleshooting guide for Istio
------------------------
https://istio.io/help/ops/

port forwarding
=================================

open telemetry endpoint
------------------------
kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=telemetry -o jsonpath='{.items[0].metadata.name}') 9093:9093
http://localhost:9093/metrics

open grafana endpoint
------------------------
kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=grafana -o jsonpath='{.items[0].metadata.name}') 9092:3000 &
http://localhost:9092/d/1/istio-mesh-dashboard?refresh=5s&orgId=1

open prometheus endpoint
------------------------
kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=prometheus -o jsonpath='{.items[0].metadata.name}') 9090:9090
http://localhost:9090/graph?g0.range_input=1h&g0.expr=grpc_server_handled_total&g0.tab=1

target - http://localhost:9090/targets
config - http://localhost:9090/config

open jaeger dashboard
------------------------
kubectl port-forward -n istio-system $(kubectl get pod -n istio-system -l app=jaeger -o jsonpath='{.items[0].metadata.name}') 16686:16686 &
http://localhost:16686

open service graph endpoint
------------------------
kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=servicegraph -o jsonpath='{.items[0].metadata.name}') 8088:8088
http://localhost:8088/dotgraph
http://localhost:8088/force/forcegraph.html



